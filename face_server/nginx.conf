# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 20m;
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;

    # gzip on;
    # gzip_min_length 1k;
    # gzip_buffers 4 16k;
    # #gzip_http_version 1.0;
    # gzip_comp_level 2;
    # gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    # gzip_vary off;
    # gzip_disable "MSIE [1-6]\.";

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       8001;
        listen       [::]:8001;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location / {
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  zhpj.njunova.com www.zhpj.njunova.com;
#        root         /home/web/project2/;
#
#        ssl_certificate /etc/letsencrypt/live/zhpj.njunova.com/fullchain.pem;
#        ssl_certificate_key  /etc/letsencrypt/live/zhpj.njunova.com/privkey.pem;
#        ssl_session_cache shared:SSL:1m;
#        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#        ssl_prefer_server_ciphers on;
#        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
#        ssl_session_timeout 1d;
#        ssl_stapling on;
#        ssl_stapling_verify on;
#        add_header Strict-Transport-Security max-age=15768000;
#	large_client_header_buffers 4 16k;
#        client_max_body_size 300m;
#        client_body_buffer_size 128k;
#        proxy_connect_timeout 600;
#        proxy_read_timeout 600;
#        proxy_send_timeout 600;
#        proxy_buffer_size 64k;
#        proxy_buffers   4 32k;
#        proxy_busy_buffers_size 64k;
#        proxy_temp_file_write_size 64k;
#
#        location / {
#        include uwsgi_params;
#        uwsgi_pass 127.0.0.1:8002;
#	add_header Strict-Transport-Security "max-age=31536000";
#        uwsgi_param UWSGI_PYHOME /home/web/project2/venv;
#        uwsgi_param UWSGI_CHDIR /home/web/project2;
#        uwsgi_param UWSGI_SCRIPT manage:app;
#        uwsgi_read_timeout 600;
#        }
#        location /.well-know{
#                alias /home/web/project2/.well-know;
#        }
#	location /static {
#        expires 30d;
#        autoindex on;
#        alias /home/web/project2/app/static;
#        }
#
#    }
    server {
    listen 443 ssl http2 default_server;
    server_name zmrj.site;
    ssl on;
    ssl_certificate   cert/cert-1538056827565_zmrj.site.crt;
    ssl_certificate_key  cert/cert-1538056827565_zmrj.site.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    root /home/web/face/face_project/dist/dist;
    index index.html index.htm;

    ##
    # Pagespeed main settings

    pagespeed on;
    pagespeed FileCachePath /var/ngx_pagespeed_cache;

    # Ensure requests for pagespeed optimized resources go to the pagespeed
    # handler and no extraneous headers get set.

    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
    location ~ "^/ngx_pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon" { }

    location / {
            try_files $uri $uri/ /index.html;
        }
    location /index.html { 
        rewrite ^ /index.html break; 
    }
    location /resources/ {
        root /home/web/face/face_server/;
        autoindex on;
    }
    }
    server {
        listen 443 ssl http2;
        server_name api.zmrj.site;
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;

        ssl on;
        ssl_certificate   cert/cert-1542039608374_api.zmrj.site.crt;
        ssl_certificate_key  cert/cert-1542039608374_api.zmrj.site.key;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
    #    location / {
    #        root html;
    #        index index.html index.htm;
    #    }
        ##
        # Pagespeed main settings

        pagespeed on;
        pagespeed FileCachePath /var/ngx_pagespeed_cache;

        # Ensure requests for pagespeed optimized resources go to the pagespeed
        # handler and no extraneous headers get set.

        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
        location ~ "^/ngx_pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon" { }

        location / {
            proxy_pass http://127.0.0.1:88;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X_forwarded_for $proxy_add_x_forwarded_for;

            client_max_body_size 7m;#最大上传文件大小

        }

    }
    # server {
	# listen	 80;
	# server_name zmrj.site;
    # root /home/web/face/face_project/dist/dist;
	# # return https://zmrj.site$request_uri;
    # location / {
    #         try_files $uri $uri/ /index.html;
    #     }
    # }

   server {
	listen	 80;
	server_name api.zmrj.site;
	return https://api.zmrj.site$request_uri;
    # add_header Access-Control-Allow-Origin * always;
    # add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
    # add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
  
    # location / {
    #     proxy_pass http://127.0.0.1:88;

    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X_forwarded_for $proxy_add_x_forwarded_for;

    #     client_max_body_size 7m;#最大上传文件大小

    # }
  } 
    server {
        listen 80;
        server_name zmrj.site;
        return https://zmrj.site$request_uri;
        
  }
}


